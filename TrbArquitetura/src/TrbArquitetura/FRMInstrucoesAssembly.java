package TrbArquitetura;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import modelo.ComandoBinario;
import utils.Conversor;
import utils.GerenciadorArquivo;
import utils.GerenciadorBinario;

/**
 *
 * @author Geam
 */
public class FRMInstrucoesAssembly extends javax.swing.JFrame {

    GerenciadorArquivo gerenciadorArquivo = new GerenciadorArquivo();
    Conversor conversor = new Conversor();
    GerenciadorBinario gerenciadorBinario = new GerenciadorBinario();
    TableModel modeloTabelaComandos;
    ArrayList<Integer> listaCiclosComandosBinarios = new ArrayList<>();
    ArrayList<String> listaComandosBinarios = new ArrayList<>();
    ArrayList<ComandoBinario> listaComandosBinariosObjeto = new ArrayList<>();

    /**
     * Creates new form FRMInctrucoesAssembly
     */
    public FRMInstrucoesAssembly() {
        initComponents();
        setLocationRelativeTo(null);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfDiretorio = new javax.swing.JTextField();
        jbtnProcurarArquivo = new javax.swing.JButton();
        jbtnProcessarArquivo = new javax.swing.JButton();
        jlblCiclosProgramaValor = new javax.swing.JLabel();
        jlblQtdInstrucoesValor = new javax.swing.JLabel();
        jlblCPIValor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Instruções assembly");
        setMaximumSize(new java.awt.Dimension(800, 600));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMaximumSize(new java.awt.Dimension(800, 600));
        jPanel3.setMinimumSize(new java.awt.Dimension(800, 600));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(100, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(800, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 40));

        jLabel1.setText("Arquivo");
        jPanel1.add(jLabel1);

        jtfDiretorio.setPreferredSize(new java.awt.Dimension(700, 22));
        jPanel1.add(jtfDiretorio);

        jbtnProcurarArquivo.setText("Procurar");
        jbtnProcurarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnProcurarArquivoActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnProcurarArquivo);

        jbtnProcessarArquivo.setText("Processar arquivo e gerar novo dump");
        jbtnProcessarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnProcessarArquivoActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnProcessarArquivo);

        jlblCiclosProgramaValor.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jlblCiclosProgramaValor.setText("  ");
        jPanel1.add(jlblCiclosProgramaValor);

        jlblQtdInstrucoesValor.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jlblQtdInstrucoesValor.setText("  ");
        jPanel1.add(jlblQtdInstrucoesValor);

        jlblCPIValor.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jlblCPIValor.setText("   ");
        jPanel1.add(jlblCPIValor);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 470;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        jPanel3.add(jPanel1, gridBagConstraints);

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnProcurarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnProcurarArquivoActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            this.jtfDiretorio.setText(selectedFile.getAbsolutePath());
        }

    }//GEN-LAST:event_jbtnProcurarArquivoActionPerformed

    private void jbtnProcessarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnProcessarArquivoActionPerformed

        try {

            //Obtém as linhas do arquivo em hexadecimal
            ArrayList<String> linhasHexadecimal = gerenciadorArquivo.obterConteudoArquivo(this.jtfDiretorio.getText());

            //Converte as linhas em hexadecimal para binário
            ArrayList<String> linhasBinario = conversor.converterListaHexadecimalParaBinario(linhasHexadecimal);

            ArrayList<String> withNops = conversor.generateWithNops(linhasBinario);

            String dataFile = "";
            for (String line : withNops) {
                dataFile += line + "\n";
                System.out.println(dataFile);
            }

            JFileChooser salvandoArquivo = new JFileChooser();
            int resultado = salvandoArquivo.showSaveDialog(this);
            if (resultado != JFileChooser.APPROVE_OPTION) {
                return;
            }

            File salvarArquivoEscolhido = salvandoArquivo.getSelectedFile();

            PrintWriter pw;
            try {                
                pw = new PrintWriter(new FileWriter(salvarArquivoEscolhido));
                pw.println(dataFile);
                pw.close();
                JOptionPane.showMessageDialog(this, "Gerado novo arquivo dump com os NOPS!");
            } catch (IOException ex) {
                //this.jTextSaida.append(ex.getMessage());
                System.err.println(ex.getMessage());
            }

            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex, "Erro ao executar o programa!", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(NewClass.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbtnProcessarArquivoActionPerformed

  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRMInstrucoesAssembly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRMInstrucoesAssembly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRMInstrucoesAssembly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRMInstrucoesAssembly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRMInstrucoesAssembly().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jbtnProcessarArquivo;
    private javax.swing.JButton jbtnProcurarArquivo;
    private javax.swing.JLabel jlblCPIValor;
    private javax.swing.JLabel jlblCiclosProgramaValor;
    private javax.swing.JLabel jlblQtdInstrucoesValor;
    private javax.swing.JTextField jtfDiretorio;
    // End of variables declaration//GEN-END:variables
}
